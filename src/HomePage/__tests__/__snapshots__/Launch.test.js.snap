// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Launch when a launch is failed renders failed 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={true}
    isInProgress={false}
    isSuccessful={false}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
        gutterBottom={true}
      >
        Details
      </WithStyles(Typography)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when a launch is successful renders successful 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={false}
    isSuccessful={true}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
        gutterBottom={true}
      >
        Details
      </WithStyles(Typography)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when a launch is upcoming renders upcoming 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={false}
    isSuccessful={false}
    isUpcoming={true}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
        gutterBottom={true}
      >
        Details
      </WithStyles(Typography)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when launch does not have details does not render the details section 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={false}
    isSuccessful={true}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when launch does not have mission ids does not render the mission ids info 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={false}
    isSuccessful={true}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
      >
        Details
      </WithStyles(Typography)>
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when launch is in progress renders in progress 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={true}
    isSuccessful={false}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={false}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
        gutterBottom={true}
      >
        Details
      </WithStyles(Typography)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
    <WithStyles(CardActions)>
      <LinkButton
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        size="small"
        to="/launches/1"
      >
        explore
      </LinkButton>
    </WithStyles(CardActions)>
  </WithStyles(Card)>
</div>
`;

exports[`Launch when launch is tentative renders without actions 1`] = `
<div
  className="launch"
>
  <WithStyles(LaunchStatus)
    isFailed={false}
    isInProgress={false}
    isSuccessful={true}
    isUpcoming={false}
  />
  <div
    className="connector"
  />
  <WithStyles(Card)
    className="launchInfo"
  >
    <WithStyles(CardHeader)
      subheader={
        <LaunchDateTime
          isTentative={true}
          utcDate={
            Object {
              "getDate": [MockFunction],
              "getFullYear": [MockFunction],
              "getMonth": [MockFunction],
              "toUTCString": [MockFunction],
            }
          }
        />
      }
      title="Test"
    />
    <WithStyles(CardContent)>
      <WithStyles(Typography)
        component="p"
        gutterBottom={true}
      >
        Details
      </WithStyles(Typography)>
      <LaunchMissionIds
        missionIds={
          Array [
            "id1",
          ]
        }
      />
    </WithStyles(CardContent)>
  </WithStyles(Card)>
</div>
`;
